import React, { useState, useEffect } from 'react';
import { useNavigate } from 'react-router-dom';
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { Badge } from '@/components/ui/badge';
import { Progress } from '@/components/ui/progress';
import { 
  BookOpen, 
  CheckCircle, 
  Circle, 
  ExternalLink,
  Star,
  Award,
  Target,
  ChevronRight,
  ChevronDown
} from 'lucide-react';

import userManager from "../utils/userManager";

import { Helmet } from "react-helmet";


const ConfirmationDialog = ({ message, onConfirm, onCancel }) => {
  const [loading, setLoading] = useState(false);

  const handleConfirm = async () => {
    setLoading(true);
    await onConfirm(); // ููุชุฑุถ ุฃู ุชููู ุฏุงูุฉ async
    setLoading(false);
  };

  return (

    <div className="fixed inset-0 z-50 flex items-center justify-center bg-black/50 backdrop-blur-sm">
      <div className="bg-background p-6 rounded-lg shadow-lg max-w-sm w-full mx-4 text-center">
        <h3 className="text-xl font-bold mb-4">{message}</h3>
        <div className="flex justify-center space-x-4 rtl:space-x-reverse">
          <Button
            onClick={handleConfirm}
            className="bg-green-600 hover:bg-green-700 text-white flex items-center justify-center"
            disabled={loading}
          >
            {loading ? (
              <span className="animate-spin rounded-full h-5 w-5 border-2 border-white border-t-transparent"></span>
            ) : (
              "ููุงูู"
            )}
          </Button>
          <Button onClick={onCancel} variant="outline" disabled={loading}>
            ูุง
          </Button>
        </div>
      </div>
    </div>
  );
};


const LearningPath = () => {
  const [user, setUser] = useState(null);
  const [loading, setLoading] = useState(true);
  const [expandedSections, setExpandedSections] = useState({});
  const [showConfirmDialog, setShowConfirmDialog] = useState(false);
  const [sectionToComplete, setSectionToComplete] = useState(null);
  const navigate = useNavigate();

  useEffect(() => {
    const fetchUser = async () => {
      const currentUser = await userManager.getCurrentUser();
      if (currentUser) {
        setUser(currentUser);
      } else {
        navigate('/login');
      }
      setLoading(false);
    };

    fetchUser();
  }, [navigate]);

  const toggleSection = (sectionKey) => {
    setExpandedSections(prev => ({
      ...prev,
      [sectionKey]: !prev[sectionKey]
    }));
  };

  const handleMarkAsCompleteClick = (sectionKey) => {
    setSectionToComplete(sectionKey);
    setShowConfirmDialog(true);
  };

  const confirmCompletion = async () => {
    if (user && sectionToComplete && !user.progress[sectionToComplete]?.completed) {
      const result = await userManager.updateUserProgress(sectionToComplete, true, 10);
      
      if (result.success) {
        setUser(result.user);
      }
    }
    setShowConfirmDialog(false);
    setSectionToComplete(null);
  };

  const cancelCompletion = () => {
    setShowConfirmDialog(false);
    setSectionToComplete(null);
  };

  const learningContent = {
    basics: {
      title: ' ุงูุฃุณุงุณูุงุช',
      description: 'ุชุนูู ุฃุณุงุณูุงุช ุงูุดุจูุงุช ูุฃูุธูุฉ ุงูุชุดุบูู ูุงูุฃูู ุงูุณูุจุฑุงูู',
      items: [
        {
          title: 'ุฃุณุงุณูุงุช ุงูุดุจูุงุช',
          description: 'ุชุนูู ููููุฉ ูุดุงุฑูุฉ ุงูุฃุฌูุฒุฉ ููุจูุงูุงุช ูุงูุงุชุตุงู ุนุจุฑ ุงูุดุจูุงุช',
          links: [
              { name: 'English', url: 'https://youtube.com/playlist?list=PLxCzCOWd7aiGFBD2-2joCpWOLUrDLvVV_&si=siWptZ-LcKzv0rbP' },
              { name: 'ุนุฑุจู', url: 'https://youtube.com/playlist?list=PL7Gr36YWMQJce2BRY8rqxkygVyBb618iF&si=xnYiDaYwRNN6agAb' }
          ]
        },
        {
              title: 'ุฃุณุงุณูุงุช Linux',
          description: 'ุชุนุฑู ุนูู ููููุฉ ุนูู ุฃูุธูุฉ ุงูุชุดุบููุ ููู ุฃูุฑ ููู ูููู ุฃูุงู ุงููุธุงู',
          links: [
            { name: '"Linux for Beginners" (Eng)', url: 'https://youtu.be/sWbUDq4S6Y8?si=UXJ5lpRj9d7phuMj' },
            { name: '"Linux ูููุจุชุฏุฆูู" (ุนุฑุจู)', url: 'https://youtube.com/playlist?list=PLEOFNTP51Gte-jhoj0hwbtYaXgW4u7lXu&si=Bwn5FHS4QbjrcqnJ' }
          ]
        },
        {
          title: 'ููุฏูุฉ ูู ุงูุฃูู ุงูุณูุจุฑุงูู',
          description: 'ุงุจุฏุฃ ุจุฃุณุงุณูุงุช ุงูุฃูู ุงูุณูุจุฑุงูู ูุชุนุฑู ุนูู ุฃูููุชู',
          links: [
            { name: 'ููุฏูุฉ ูู ุงูุฃูู ุงูุณูุจุฑุงูู ุนุฑุจู', url: 'https://youtu.be/WiYuS9ft78I?si=KXygtHQPW2GU-v0z' },
            { name: 'ููุฏูุฉ ูู ุงูุฃูู ุงูุณูุจุฑุงูู ุฅูุฌููุฒู', url: 'https://www.youtube.com/live/-n7iaQVF88A?si=ZNuDW6z0sqIMLSqr' }
          ]
        },
        {
          title: 'ุดูุงุฏุฉ CompTIA Network+',
          description: "ุชุบุทู ูุฐู ุงูุดูุงุฏุฉ ูู ูุง ุชุญุชุงุฌ ููุนุฑูุชู ุญูู ุงูุดุจูุงุช.\nููุงุญุธุฉ ูููุฉ:\nูุฐุง ุงูููุฑุณ ูุฌุงูู ุจุงููุงูู ูุจุฏูู ุดูุงุฏุฉ.\nุฃูุง ูู ูุฑุบุจ ูู ุงูุญุตูู ุนูู ุดูุงุฏุฉ ูุนุชูุฏุฉุ ูููููู ุงูุชุณุฌูู ูู ุงููููุน ุงูุฑุณูู ูุฏูุน ุงูุฑุณูู ุงููุทููุจุฉ.",
          links: [
            { name: 'ููุฑุณ CompTIA Network+', url: 'https://youtube.com/playlist?list=PLG49S3nxzAnl4QDVqK-hOnoqcSKEIDDuv&si=18JzC6KWjTxu1TQw' }
          ]
        },
        
      ]
    },
    fundamentals: {
      title: '๐ ุงูููุงููู ุงูุฃุณุงุณูุฉ',
      description: 'ุจูุงุก ุฃุณุงุณ ูุชูู ูู ุงูุฃูู ุงูุณูุจุฑุงูู ูููู ุฃูุถู ุงูููุงุฑุณุงุช',
      items: [
        {
          title: 'ุฃุณุงุณูุงุช ุงูุฃูู ูุฃูุถู ุงูููุงุฑุณุงุช',
          description: 'ุชุนูู ุงููุจุงุฏุฆ ุงูุฃุณุงุณูุฉ ููุฃูู ุงูุณูุจุฑุงูู ูุฃูุถู ุงูููุงุฑุณุงุช',
          links: [
              {
      name: "ููุฑุณ ุฃุณุงุณูุงุช ุงูุฃูู ุงูุณูุจุฑุงูู - ุนุฑุจู",
      url: "https://www.youtube.com/playlist?list=PLh2Jy0nKL_j1WZMzITHgUuzaadpSULlMm"
    },
              { name: 'ุฃุณุงุณูุงุช ุงูุฃูู ุงูุณูุจุฑุงูู - ุฅูุฌููุฒู', url: 'https://www.simplilearn.com/learn-cyber-security-basics-skillup' }
          ]
        },
        {
          title: 'ุฃุฏูุงุช ูุชูููุงุช ุงูุฃูู ุงูุฃุณุงุณูุฉ',
          description: 'ุงูุชุดู ุงูุฃุฏูุงุช ุงูุฃุณุงุณูุฉ ุงูุชู ุชุณุงุนุฏ ูู ุญูุงูุฉ ููุฑุงูุจุฉ ุงูุฃูุธูุฉ',
          links: [
            { name: 'ุฃุฏูุงุช ุงูุฃูู ุงูุณูุจุฑุงูู - YouTube', url: 'https://www.youtube.com/watch?v=SW6AE76Pi50' }
          ]
        },
        {
          title: 'ููุฏูุฉ ูู ุงููุฑุตูุฉ ุงูุฃุฎูุงููุฉ',
          description: 'ุชุนูู ุฃุณุงุณูุงุช ุงููุฑุตูุฉ ุงูุฃุฎูุงููุฉ ูููู ุชุณุงุนุฏ ูู ุงูุนุซูุฑ ุนูู ููุงุท ุงูุถุนู',
          links: [
            { name: 'ุฃุณุงุณูุงุช ุงููุฑุตูุฉ ุงูุฃุฎูุงููุฉ - Cybrary', url: 'https://www.cybrary.it/course/ethical-hacking/' }
          ]
        },
        {
          title: 'ููุงุท ุงูุถุนู ุงูุฃูููุฉ ุงูุดุงุฆุนุฉ',
          description: 'ููู ูุฎุงุทุฑ ุงูุฃูุงู ุงูุฃูุซุฑ ุดููุนูุง ุงูุชู ูููู ุฃู ุชุคุซุฑ ุนูู ุงูุชุทุจููุงุช ูุงูุดุจูุงุช',
          links: [
            { name: 'ููู ููุงุท ุงูุถุนู ุงูุดุงุฆุนุฉ - OWASP', url: 'https://owasp.org/www-project-top-ten/' },
            { name: 'OWASP Juice Shop', url: 'https://owasp.org/www-project-juice-shop/' }
          ]
        }
      ]
    },
    specialization: {
      title: '๐ ุงูุชุฎุตุต',
      description: 'ุงุฎุชุฑ ุชุฎุตุตู ูู ูุฌุงู ุงูุฃูู ุงูุณูุจุฑุงูู',
      items: [
        {
          title: 'ุฃูู ุงูุดุจูุงุช',
          description: 'ุชุฎุตุต ูู ุญูุงูุฉ ุงูุดุจูุงุช ูุงูุจููุฉ ุงูุชุญุชูุฉ',
          links: [
            { name: 'CompTIA Security+', url: 'https://www.comptia.org/certifications/security' },
            { name: 'Cisco Certified CyberOps Associate', url: 'https://www.cisco.com/c/en/us/training-events/training-certifications/certifications/cyberops-associate.html' }
          ]
        },
        {
          title: 'ุงุฎุชุจุงุฑ ุงูุงุฎุชุฑุงู',
          description: 'ุชุนูู ููููุฉ ุงุฎุชุจุงุฑ ุฃูุงู ุงูุฃูุธูุฉ ูุงูุชุทุจููุงุช',
          links: [
            { name: 'Certified Ethical Hacker (CEH)', url: 'https://t.me/c_yber_r/44' },
            { name: 'Offensive Security Certified Professional (OSCP)', url: 'https://t.me/c_yber_r/2' }
          ]
        },
        {
          title: 'ุงูุงุณุชุฌุงุจุฉ ููุญูุงุฏุซ',
          description: 'ุชุฎุตุต ูู ุงูุชุนุงูู ูุน ุงูุญูุงุฏุซ ุงูุฃูููุฉ ูุงูุงุณุชุฌุงุจุฉ ููุง',
          links: [
            { name: 'Certified Incident Handler (GCIH)', url: 'https://www.giac.org/certification/certified-incident-handler-gcih' }
          ]
        },
        {
          title: 'ุฃูู ุงูุณุญุงุจุฉ',
          description: 'ุชุฎุตุต ูู ุฃูุงู ุงูุญูุณุจุฉ ุงูุณุญุงุจูุฉ',
          links: [
            { name: 'Certified Cloud Security Professional (CCSP)', url: 'https://www.isc2.org/Certifications/CCSP' },
            { name: 'AWS Certified Security โ Specialty', url: 'https://aws.amazon.com/certification/certified-security-specialty/' }
          ]
        }
      ]
    },
    practicalExperience: {
      title: '๐ป ุงูุฎุจุฑุฉ ุงูุนูููุฉ',
      description: 'ุงุญุตู ุนูู ุฎุจุฑุฉ ุนูููุฉ ูุน ุฃุฏูุงุช ููุฎุชุจุฑุงุช ุงูุฃูู ุงูุณูุจุฑุงูู',
      items: [
        {
          title: 'TryHackMe',
          description: 'ูุฎุชุจุฑุงุช ุชูุงุนููุฉ ูููุฌูุฉ ุชุบุทู ููุงุถูุน ุงูุฃูู ุงูุณูุจุฑุงูู ุงููุฎุชููุฉ',
          links: [
            { name: 'ูุฎุชุจุฑุงุช TryHackMe', url: 'https://tryhackme.com/' }
          ]
        },
        {
          title: 'Hack The Box',
          description: 'ุงุฎุชุจุฑ ููุงุฑุงุชู ูุน ูุฌููุนุฉ ูุงุณุนุฉ ูู ุงูุชุญุฏูุงุช',
          links: [
            { name: 'ูุฎุชุจุฑุงุช Hack The Box', url: 'https://www.hackthebox.eu/' }
          ]
        },
        {
          title: 'OverTheWire',
          description: 'ุณูุณูุฉ ูู ุฃูุนุงุจ ุงูุญุฑุจ ุงููุตููุฉ ูุชุนูู ููุงููู ุงูุฃูุงู',
          links: [
            { name: 'ุฃูุนุงุจ OverTheWire', url: 'https://overthewire.org/wargames/' }
          ]
        },
        {
          title: 'VulnHub',
          description: 'ุฃุฌูุฒุฉ ุงูุชุฑุงุถูุฉ ุถุนููุฉ ูุงุจูุฉ ููุชูุฒูู ููููุงุฑุณุฉ',
          links: [
            { name: 'VulnHub', url: 'https://www.vulnhub.com/' }
          ]
        },
        {
          title: 'OWASP Juice Shop',
          description: 'ุชุทุจูู ููุจ ุถุนูู ูุชุนูู ุฃูุงู ุชุทุจููุงุช ุงูููุจ',
          links: [
            { name: 'OWASP Juice Shop', url: 'https://owasp.org/www-project-juice-shop/' }
          ]
        }
      ]
    },
    continuousLearning: {
      title: '๐ ุงูุชุนูู ุงููุณุชูุฑ',
      description: 'ููุงุฑุฏ ููุจูุงุก ุนูู ุงุทูุงุน ุจุฃุญุฏุซ ุงูุชุทูุฑุงุช ูู ุงูุฃูู ุงูุณูุจุฑุงูู',
      items: [
        {
          title: 'ุฃุฎุจุงุฑ ุงูุฃูู ุงูุณูุจุฑุงูู',
          description: 'ููุงูุน ุฅุฎุจุงุฑูุฉ ูุชุฎุตุตุฉ ูู ุงูุฃูู ุงูุณูุจุฑุงูู',
          links: [
            { name: 'Dark Reading', url: 'https://www.darkreading.com/' },
            { name: 'Krebs on Security', url: 'https://krebsonsecurity.com/' },
            { name: 'The Hacker News', url: 'https://thehackernews.com/' }
          ]
        },
        {
          title: 'ูุฌุชูุนุงุช ุงูุชุนูู',
          description: 'ุงูุถู ุฅูู ูุฌุชูุนุงุช ุงููุชุฎุตุตูู ูู ุงูุฃูู ุงูุณูุจุฑุงูู',
          links: [
            { name: 'Reddit - Netsec', url: 'https://www.reddit.com/r/netsec/' }
          ]
        }
      ]
    },
    youtubeChannels: {
      title: '๐บ ูููุงุช ููุชููุจ',
      description: 'ูููุงุช ุชุนููููุฉ ูููุฏุฉ ูู ูุฌุงู ุงูุฃูู ุงูุณูุจุฑุงูู',
      items: [
        {
          title: 'ูููุงุช ุชุนููููุฉ ุฃุณุงุณูุฉ',
          description: 'ูููุงุช ููุชููุจ ุชูุฏู ูุญุชูู ุชุนูููู ุนุงูู ุงูุฌูุฏุฉ',
          links: [
            { name: 'Cybrary', url: 'https://www.youtube.com/@CybraryIt' },
            { name: 'Hak5', url: 'https://www.youtube.com/user/Hak5Darren' },
            { name: 'Professor Messer', url: 'https://www.youtube.com/user/professormesser' }
          ]
        }
      ]
    },
    jobRoles: {
      title: '๐ผ ุงูุฃุฏูุงุฑ ุงููุธูููุฉ',
      description: 'ุชุนุฑู ุนูู ุงููุฑุต ุงููุธูููุฉ ูู ูุฌุงู ุงูุฃูู ุงูุณูุจุฑุงูู',
      items: [
        {
          title: 'ูุญูู ุฃูู ุงููุนูููุงุช',
          description: 'ูุฑุงูุจุฉ ูุชุญููู ุงูุชูุฏูุฏุงุช ุงูุฃูููุฉ',
          links: []
        },
        {
          title: 'ูููุฏุณ ุฃูู ุงูุดุจูุงุช',
          description: 'ุชุตููู ูุชูููุฐ ุญููู ุฃูุงู ุงูุดุจูุงุช',
          links: []
        },
        {
          title: 'ุฎุจูุฑ ุงุฎุชุจุงุฑ ุงูุงุฎุชุฑุงู',
          description: 'ุงุฎุชุจุงุฑ ุฃูุงู ุงูุฃูุธูุฉ ูุงูุชุทุจููุงุช',
          links: []
        },
        {
          title: 'ูุณุชุดุงุฑ ุฃูู ุงููุนูููุงุช',
          description: 'ุชูุฏูู ุงูุงุณุชุดุงุฑุงุช ุงูุฃูููุฉ ูููุคุณุณุงุช',
          links: []
        }
      ]
    },
    certifications: {
      title: '๐ ุงูุดูุงุฏุงุช',
      description: 'ุงูุดูุงุฏุงุช ุงูููููุฉ ุงููุนุชูุฏุฉ ูู ูุฌุงู ุงูุฃูู ุงูุณูุจุฑุงูู',
      items: [
        {
          title: 'ุดูุงุฏุงุช ุงููุณุชูู ุงููุจุชุฏุฆ',
          description: 'ุดูุงุฏุงุช ููุงุณุจุฉ ูููุจุชุฏุฆูู ูู ุงููุฌุงู',
          links: [
            { name: 'CompTIA Security+', url: 'https://www.comptia.org/certifications/security' },
            { name: 'CompTIA Network+', url: 'https://www.comptia.org/certifications/network' }
          ]
        },
        {
          title: 'ุดูุงุฏุงุช ุงููุณุชูู ุงููุชูุฏู',
          description: 'ุดูุงุฏุงุช ูููุชุฎุตุตูู ุฐูู ุงูุฎุจุฑุฉ',
          links: [
            { name: 'CISSP', url: 'https://www.isc2.org/Certifications/CISSP' },
            { name: 'CISM', url: 'https://www.isaca.org/certifications/cism' }
          ]
        }
      ]
    },
    roadmap: {
      title: '๐ ุฎุงุฑุทุฉ ุทุฑูู ููุฏุฉ 6 ุฃุดูุฑ',
      description: 'ุฎุทุฉ ุชุนูู ููุธูุฉ ููุฏุฉ 6 ุฃุดูุฑ',
      items: [
        {
          title: 'ุงูุดูุฑ ุงูุฃูู ูุงูุซุงูู: ุงูุฃุณุงุณูุงุช',
          description: 'ุจูุงุก ุฃุณุงุณ ููู ูู ุงูุดุจูุงุช ูุฃูุธูุฉ ุงูุชุดุบูู',
          links: []
        },
        {
          title: 'ุงูุดูุฑ ุงูุซุงูุซ ูุงูุฑุงุจุน: ุงูููุงููู ุงูุฃุณุงุณูุฉ',
          description: 'ุชุนูู ููุงููู ุงูุฃูุงู ูุฃูุถู ุงูููุงุฑุณุงุช',
          links: []
        },
        {
          title: 'ุงูุดูุฑ ุงูุฎุงูุณ ูุงูุณุงุฏุณ: ุงูุชุฎุตุต ูุงูููุงุฑุณุฉ',
          description: 'ุงุฎุชูุงุฑ ุงูุชุฎุตุต ูุงูุญุตูู ุนูู ุฎุจุฑุฉ ุนูููุฉ',
          links: []
        }
      ]
    },
    additionalResources: {
      title: '๐ก ููุงุฑุฏ ุฅุถุงููุฉ',
      description: 'ููุงุฑุฏ ููุฑุงุฌุน ุฅุถุงููุฉ ูููุฏุฉ',
      items: [
        {
          title: 'ูุชุจ ูููุฏุฉ',
          description: 'ูุชุจ ุฃุณุงุณูุฉ ูู ูุฌุงู ุงูุฃูู ุงูุณูุจุฑุงูู',
          links: []
        },
        {
          title: 'ุฃุฏูุงุช ูุฌุงููุฉ',
          description: 'ุฃุฏูุงุช ูุฌุงููุฉ ูููุฏุฉ ูููุชุฎุตุตูู',
          links: []
        },
        {
          title: 'ูุคุชูุฑุงุช ููุนุงููุงุช',
          description: 'ูุคุชูุฑุงุช ูููุฉ ูู ูุฌุงู ุงูุฃูู ุงูุณูุจุฑุงูู',
          links: []
        }
      ]
    }
  };


  if (loading) {
    return (
      <div className="min-h-screen flex items-center justify-center">
        <p>ุฌุงุฑู ุชุญููู ูุณุงุฑ ุงูุชุนูู...</p>
      </div>
    );
  }

  if (!user) {
    // The redirect should handle this, but as a fallback, show a message
    return null; 
  }

  const completedSections = Object.values(user.progress).filter(p => p.completed).length;
  const totalSections = Object.keys(learningContent).length;
  const overallProgress = (completedSections / totalSections) * 100;

  return (
    <>
      <Helmet>
        <title>ูุณุงุฑ ุชุนูู ุงูุฃูู ุงูุณูุจุฑุงูู ุงูุดุงูู</title>
        <meta name="description" content="ุงุจุฏุฃ ุฑุญูุชู ูู ุชุนูู ุงูุฃูู ุงูุณูุจุฑุงูู ูู ุงูุตูุฑ ุญุชู ุงูุงุญุชุฑุงู" />
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
<meta name="google-adsense-account" content="ca-pub-2404732748519909"></meta>

  
  <meta name="keywords" content="ุงูุฃูู ุงูุณูุจุฑุงูู, ุชุนูู ุงูุฃูู ุงูุณูุจุฑุงูู, ุณูุจุฑุงูู, ุงุฎุชุฑุงู, ุญูุงูุฉ ุงูุดุจูุงุช, ุชุนูู ุงูููุฑ ุงูุฃุฎูุงูู, ุฃูู ุงููุนูููุงุช" />
  <meta name="author" content="waheeb al_sharabi" />


  <meta property="og:title" content="ูุณุงุฑ ุชุนูู ุงูุฃูู ุงูุณูุจุฑุงูู ุงูุดุงูู" />
  <meta property="og:description" content="ุงุจุฏุฃ ุฑุญูุชู ูู ุชุนูู ุงูุฃูู ุงูุณูุจุฑุงูู ุจุฎุทุฉ ูุงุถุญุฉ ูุดุงููุฉุ ุฎุทูุฉ ุจุฎุทูุฉ ุญุชู ุงูุงุญุชุฑุงู." />
  <meta property="og:image" content="https://cyberlearn0.netlify.app/og-image.png" />
  <meta property="og:url" content="https://cyberlearn0.netlify.app" />
  <meta property="og:type" content="website" />

  <meta name="twitter:card" content="summary_large_image" />
  <meta name="twitter:title" content="ูุณุงุฑ ุชุนูู ุงูุฃูู ุงูุณูุจุฑุงูู ุงูุดุงูู" />
  <meta name="twitter:description" content="ุงุจุฏุฃ ุฑุญูุชู ูู ุชุนูู ุงูุฃูู ุงูุณูุจุฑุงูู ุจุฎุทุฉ ูุงุถุญุฉ ูุดุงููุฉุ ุฎุทูุฉ ุจุฎุทูุฉ ุญุชู ุงูุงุญุชุฑุงู." />
  <meta name="twitter:image" content="https://cyberlearn0.netlify.app/og-image.png" />
  <link crossorigin href="https://fonts.gstatic.com/" rel="preconnect"/>
 
  <script type="module" crossorigin src="/assets/index-rqsdKoJT.js"></script>
      </Helmet>
      <div className="min-h-screen bg-background py-8 px-4">
        <div className="max-w-4xl mx-auto">
          {/* Header */}
          <div className="text-center mb-8">
            <h1 className="text-3xl font-bold text-foreground mb-4">
            ูุณุงุฑ ุชุนูู ุงูุฃูู ุงูุณูุจุฑุงูู ุงูุดุงูู
          </h1>
          <p className="text-muted-foreground mb-6">
            ูุณุงุฑ ููุธู ููุชุฏุฑุฌ ูุฃุฎุฐู ูู ุงููุจุชุฏุฆ ุฅูู ุงูุฎุจูุฑ ูู ุงูุฃูู ุงูุณูุจุฑุงูู
          </p>
          
          {/* Overall Progress */}
          <Card className="mb-8">
            <CardContent className="pt-6">
              <div className="flex items-center justify-between mb-4">
                <span className="text-lg font-medium">ุงูุชูุฏู ุงูุฅุฌูุงูู</span>
                <Badge variant="secondary" className="text-lg px-3 py-1">
                  {completedSections}/{totalSections} ุฃูุณุงู
                </Badge>
              </div>
              <Progress value={overallProgress} className="h-3 mb-2" />
              <p className="text-sm text-muted-foreground">
                {Math.round(overallProgress)}% ููุชูู
              </p>
            </CardContent>
          </Card>
        </div>

        {/* Learning Sections */}
        <div className="space-y-6">
          {Object.entries(learningContent).map(([sectionKey, section]) => {
            const isCompleted = user.progress[sectionKey]?.completed || false;
            const isExpanded = expandedSections[sectionKey] || false;
            const score = user.progress[sectionKey]?.score || 0;

            return (
              <Card key={sectionKey} className={`card-hover ${isCompleted ? 'border-green-500' : ''}`}>
                <CardHeader 
                  className="cursor-pointer"
                  onClick={() => toggleSection(sectionKey)}
                >
                  <div className="flex items-center justify-between">
                    <div className="flex items-center space-x-3 rtl:space-x-reverse">
                      {isCompleted ? (
                        <CheckCircle className="h-6 w-6 text-green-500" />
                      ) : (
                        <Circle className="h-6 w-6 text-muted-foreground" />
                      )}
                      <div>
                        <CardTitle className="text-xl">{section.title}</CardTitle>
                        <CardDescription className="mt-1">
                          {section.description}
                        </CardDescription>
                      </div>
                    </div>
                    <div className="flex items-center space-x-2 rtl:space-x-reverse">
                      {isCompleted && (
                        <Badge className="bg-green-100 text-green-800">
                          <Star className="h-3 w-3 ml-1" />
                          {score} ููุทุฉ
                        </Badge>
                      )}
                      {isExpanded ? (
                        <ChevronDown className="h-5 w-5" />
                      ) : (
                        <ChevronRight className="h-5 w-5" />
                      )}
                    </div>
                  </div>
                </CardHeader>

                {isExpanded && (
                  <CardContent>
                    <div className="space-y-6">
                      {section.items.map((item, index) => (
                        <div key={index} className="border-r-4 border-primary/20 pr-4">
                          <h3 className="font-semibold text-lg mb-2">{item.title}</h3>
                          <p className="text-muted-foreground mb-3">{item.description}</p>
                          
                          {item.links.length > 0 && (
                            <div className="space-y-2">
                              <h4 className="font-medium text-sm text-muted-foreground">ุงูุฑูุงุจุท ุงููููุฏุฉ:</h4>
                              <div className="flex flex-wrap gap-2">
                                {item.links.map((link, linkIndex) => (
                                  <a
                                    key={linkIndex}
                                    href={link.url}
                                    target="_blank"
                                    rel="noopener noreferrer"
                                    className="inline-flex items-center space-x-1 rtl:space-x-reverse text-sm text-primary hover:text-primary/80 border border-primary/20 rounded-md px-2 py-1 hover:bg-primary/5 transition-colors"
                                  >
                                    <ExternalLink className="h-3 w-3" />
                                    <span>{link.name}</span>
                                  </a>
                                ))}
                              </div>
                            </div>
                          )}
                        </div>
                      ))}
                      
                      <div className="pt-4 border-t">
                        {!isCompleted ? (
                          <Button 
                            onClick={() => handleMarkAsCompleteClick(sectionKey)}
                            className="w-full sm:w-auto"
                          >
                            <Award className="h-4 w-4 ml-2" />
                            ุชู ุฅููุงู ูุฐุง ุงููุณู
                          </Button>
                        ) : (
                          <div className="flex items-center space-x-2 rtl:space-x-reverse text-green-600">
                            <CheckCircle className="h-5 w-5" />
                            <span className="font-medium">ุชู ุฅููุงู ูุฐุง ุงููุณู ุจูุฌุงุญ!</span>
                            <Badge className="bg-green-100 text-green-800">
                              +{score} ููุทุฉ
                            </Badge>
                          </div>
                        )}
                      </div>
                    </div>
                  </CardContent>
                )}
              </Card>
            );
          })}
        </div>

        {/* Completion Message */}
        {completedSections === totalSections && (
          <Card className="mt-8 bg-primary text-primary-foreground">
            <CardContent className="pt-6 text-center">
              <Award className="h-12 w-12 mx-auto mb-4" />
              <h2 className="text-2xl font-bold mb-2">
                ูุจุฑูู! ููุฏ ุฃูููุช ุงููุณุงุฑ ุงูุชุนูููู ุจุงููุงูู! ๐
              </h2>
              <p className="text-lg opacity-90">
                ุฃูุช ุงูุขู ุฌุงูุฒ ูุจุฏุก ูุณูุฑุชู ุงูููููุฉ ูู ูุฌุงู ุงูุฃูู ุงูุณูุจุฑุงูู
              </p>
            </CardContent>
          </Card>
        )}
      </div>

      {showConfirmDialog && (
        <ConfirmationDialog
          message="ูู ุฃูุช ูุชุฃูุฏ ูู ุฃูู ุฃูููุช ูู ุดูุก ูู ูุฐุง ุงููุณูุ"
          onConfirm={confirmCompletion}
          onCancel={cancelCompletion}
        />
      )}
    </div>
     </>
  );
};

export default LearningPath;